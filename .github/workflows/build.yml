name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  actions: read
  
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            platform: windows
            executable: Backdrop-Off.exe
          - os: macos-latest
            platform: macos
            executable: Backdrop-Off
          - os: ubuntu-latest
            platform: linux
            executable: Backdrop-Off

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk python3-dev

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install python-tk

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Test imports (debug)
      run: |
        python -c "import customtkinter; print('CustomTkinter OK')"
        python -c "import rembg; print('Rembg OK')"
        python -c "import PIL; print('PIL OK')"
        python -c "import onnxruntime; print('ONNXRuntime OK')"

    - name: List files (debug)
      run: |
        ls -la
        echo "Looking for spec file..."
        find . -name "*.spec" -type f
      shell: bash

    - name: Build executable
      run: |
        echo "Building with PyInstaller..."
        pyinstaller --onefile --windowed --name=Backdrop-Off \
          --hidden-import=customtkinter \
          --hidden-import=PIL._tkinter_finder \
          --hidden-import=PIL.Image \
          --hidden-import=rembg \
          --hidden-import=onnxruntime \
          --hidden-import=tkinter.colorchooser \
          --hidden-import=tkinter.filedialog \
          --hidden-import=tkinter.messagebox \
          --hidden-import=threading \
          --hidden-import=subprocess \
          --hidden-import=platform \
          --noconfirm \
          bg_remover_ui.py
      shell: bash

    - name: List dist contents (debug)
      run: |
        ls -la dist/
      shell: bash

    - name: Verify executable exists
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          if [ ! -f "dist/Backdrop-Off.exe" ]; then
            echo "Windows executable not found!"
            exit 1
          fi
        else
          if [ ! -f "dist/Backdrop-Off" ]; then
            echo "Unix executable not found!"
            exit 1
          fi
        fi
      shell: bash

    - name: Rename executables for release
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          echo "Windows executable: dist/Backdrop-Off.exe"
        elif [ "${{ matrix.os }}" = "macos-latest" ]; then
          mv dist/Backdrop-Off dist/Backdrop-Off-macOS
          echo "macOS executable renamed to: dist/Backdrop-Off-macOS"
        else
          mv dist/Backdrop-Off dist/Backdrop-Off-Linux
          echo "Linux executable renamed to: dist/Backdrop-Off-Linux"
        fi
        ls -la dist/
      shell: bash

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backdrop-off-${{ matrix.platform }}
        path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
      actions: read
    
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/backdrop-off-windows/Backdrop-Off.exe
          artifacts/backdrop-off-macos/Backdrop-Off-macOS
          artifacts/backdrop-off-linux/Backdrop-Off-Linux
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}